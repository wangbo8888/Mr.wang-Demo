<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mybatis.mapper.UserMapper">
    <resultMap type="com.example.demo.mybatis.dao.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="birthday" column="birthday" jdbcType="DATE"/>
        <result property="sex" column="sex" jdbcType="VARCHAR"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap type="com.example.demo.mybatis.result.ListVo" id="listMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="birthday" column="birthday" jdbcType="DATE"/>
        <result property="sex" column="sex" jdbcType="VARCHAR"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
        <collection property="list" ofType="com.example.demo.mybatis.dao.Orders">
            <result property="id" column="id" jdbcType="INTEGER"/>
            <result property="uid" column="uid" jdbcType="INTEGER"/>
            <result property="ordertime" column="ordertime" jdbcType="DATE"/>
            <result property="money" column="money" jdbcType="DOUBLE"/>
            <result property="ordetype" column="ordeType" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>
    <select id="selectList" resultMap="listMap">
        SELECT
            base.id,
               base.sex,
               base.username,
               base.address,
               base.birthday,
            o.uid
        FROM
            (
                SELECT
                    *
                FROM
                    user
                    where  user.id = 1
                    LIMIT 0, 5
            ) base
                LEFT JOIN
            orders o  on o.uid = base.id
            where o.orderType = '商品1'
    </select>
    <!-- 通过ID查询单条数据 -->
    <select id="queryById" resultMap="UserMap">
        select
            id,username,birthday,sex,address
        from user
        where id = #{id}
    </select>

    <!--分页查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserMap">
        select
        id,username,birthday,sex,address
        from user
        <where>
            <if test="id != null and id != ''">
                and id = #{id}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="birthday != null and birthday != ''">
                and birthday = #{birthday}
            </if>
            <if test="sex != null and sex != ''">
                and sex = #{sex}
            </if>
            <if test="address != null and address != ''">
                and address = #{address}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from user
        <where>
            <if test="id != null and id != ''">
                and id = #{id}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="birthday != null and birthday != ''">
                and birthday = #{birthday}
            </if>
            <if test="sex != null and sex != ''">
                and sex = #{sex}
            </if>
            <if test="address != null and address != ''">
                and address = #{address}
            </if>
        </where>
    </select>


    <!--新增数据-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into user(id,username,birthday,sex,address)
        values (#{id},#{username},#{birthday},#{sex},#{address})
    </insert>

    <!-- 批量新增数据 -->
    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user(id,username,birthday,sex,address)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.id},#{entity.username},#{entity.birthday},#{entity.sex},#{entity.address})
        </foreach>
    </insert>

    <!-- 批量新增或按主键更新数据 -->
    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user(id,username,birthday,sex,address)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.id},#{entity.username},#{entity.birthday},#{entity.sex},#{entity.address})
        </foreach>
        on duplicate key update
        id=values(id),
        username=values(username),
        birthday=values(birthday),
        sex=values(sex),
        address=values(address)
    </insert>

    <!-- 更新数据 -->
    <update id="update">
        update user
        <set>
            <if test="id != null and id != ''">
                id = #{id},
            </if>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="birthday != null and birthday != ''">
                birthday = #{birthday},
            </if>
            <if test="sex != null and sex != ''">
                sex = #{sex},
            </if>
            <if test="address != null and address != ''">
                address = #{address},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from user where id = #{id}
    </delete>
</mapper>